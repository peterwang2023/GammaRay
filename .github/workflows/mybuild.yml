# SPDX-FileCopyrightText: 2023 Klar√§lvdalens Datakonsult AB, a KDAB Group company <info@kdab.com>
#
# SPDX-License-Identifier: MIT

name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os:
          - ubuntu-latest
          - windows-latest

        config:
          - preset: ci-dev-client-and-ui-qt5
            qt_version: "5.15"
            tests_with: qt5

          - preset: ci-dev-probe-only-qt5
            qt_version: "5.15"

    steps:
      - name: Install Qt with options and default aqtversion
        uses: jurplel/install-qt-action@v3
        with:
          aqtversion: null # use whatever the default is
          modules: ${{ matrix.config.qt_modules }}
          version: ${{ matrix.config.qt_version }}
          cache: true

      - name: Checkout sources
        uses: actions/checkout@v4
        with:
          submodules: recursive

      - name: Install Dependencies on Linux
        if: ${{ runner.os == 'Linux' }}
        run: |
          sudo apt update -qq
          sudo apt install -y gdb doxygen libgraphviz-dev

      - name: Install ninja-build tool (must be after Qt due PATH changes)
        uses: turtlesec-no/get-ninja@main

      - name: Make sure MSVC is found when Ninja generator is in use
        if: ${{ runner.os == 'Windows' }}
        uses: ilammy/msvc-dev-cmd@v1

      - name: Configure project
        run: >
          cmake -S . -G Ninja --preset ${{ matrix.config.preset }}
          -DGAMMARAY_WITH_KDSME=${{ runner.os == 'Linux' }}
          -DGAMMARAY_BUILD_DOCS=${{ runner.os == 'Linux' }}

      - name: Build Project
        run: cmake --build ./build-${{ matrix.config.preset }}

      - name: Pack Build Result
        if: ${{ runner.os == 'Windows' }}
        run: tar -zcf  build-${{ matrix.config.preset }}-bin.tar.gz  ./build-${{ matrix.config.preset }}/bin

      - name: Upload File
        if: ${{ runner.os == 'Windows' }}
        uses: actions/upload-artifact@v2
        with:
          name: build-${{ matrix.config.preset }}-bin.tar.gz
          path: ./build-${{ matrix.config.preset }}-bin.tar.gz

      - name: Enable gdb attaching
        if: ${{ runner.os == 'Linux' && matrix.config.tests_with != '' }}
        run: echo 0 | sudo tee /proc/sys/kernel/yama/ptrace_scope

        # Exclude
        # quickmaterialtest|quicktexturetest fails because of QT_QUICK_BACKEND=software
      - name: Run tests on Linux Qt5 (offscreen)
        if: ${{ runner.os == 'Linux' && matrix.config.tests_with == 'qt5' }}
        run: >
          ctest --test-dir ./build-${{ matrix.config.preset }} --output-on-failure
          --exclude-regex "quickmaterialtest|quicktexturetest"
        env:
          QT_QPA_PLATFORM: offscreen
          QT_QUICK_BACKEND: software


        # Exclude
        # quicktexturetest
        # bindinginspectortest
      - name: Qt5 Run tests on Windows
        if: ${{ runner.os == 'Windows' && matrix.config.tests_with == 'qt5' }}
        run: >
          ctest --test-dir ./build-${{ matrix.config.preset }} -C 'Release' --output-on-failure
          --exclude-regex "quicktexturetest|bindinginspectortest"

      - name: Read tests log when it fails
        uses: andstor/file-reader-action@v1
        if: ${{ failure() }}
        with:
          path: "./build-${{ matrix.config.preset }}/Testing/Temporary/LastTest.log"
